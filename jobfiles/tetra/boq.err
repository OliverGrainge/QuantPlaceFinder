/iridisfs/home/oeg1n18/QuantPlaceFinder/finetune.py:26: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  sd = torch.load(args.weights_path)["state_dict"]
Using bfloat16 Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: oliver1998 (vpr_minds). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.18.7
wandb: Run data is saved locally in ./wandb/run-20241218_004007-sxqk3lp5
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run backbone[vit_base_plrbitlinear]_agg[boq]_aug[lightaugment]_quant_schedule[sigmoid]_res[322x322]
wandb: ‚≠êÔ∏è View project at https://wandb.ai/vpr_minds/tetra
wandb: üöÄ View run at https://wandb.ai/vpr_minds/tetra/runs/sxqk3lp5
/iridisfs/home/oeg1n18/QuantPlaceFinder/tetraenv/lib/python3.12/site-packages/pytorch_lightning/callbacks/model_checkpoint.py:654: Checkpoint directory /iridisfs/home/oeg1n18/QuantPlaceFinder/checkpoints/TeTRA/backbone[vit_base_plrbitlinear]_agg[boq]_aug[lightaugment]_quant_schedule[sigmoid]_res[322x322] exists and is not empty.
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Loading `train_dataloader` to estimate number of stepping batches.

  | Name       | Type                 | Params | Mode 
------------------------------------------------------------
0 | fp_loss_fn | MultiSimilarityLoss  | 0      | train
1 | fp_miner   | MultiSimilarityMiner | 0      | train
2 | q_loss_fn  | MultiSimilarityLoss  | 0      | train
3 | q_miner    | MultiSimilarityMiner | 0      | train
4 | model      | VPRModel             | 100 M  | train
------------------------------------------------------------
14.1 M    Trainable params
86.0 M    Non-trainable params
100 M     Total params
400.305   Total estimated model params size (MB)
312       Modules in train mode
0         Modules in eval mode
SLURM auto-requeueing enabled. Setting signal handlers.
`Trainer.fit` stopped: `max_epochs=8` reached.
/iridisfs/home/oeg1n18/QuantPlaceFinder/finetune.py:26: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  sd = torch.load(args.weights_path)["state_dict"]
Using bfloat16 Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: oliver1998 (vpr_minds). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.18.7
wandb: Run data is saved locally in ./wandb/run-20241218_014837-frvimlfo
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run backbone[vit_base_plrbitlinear]_agg[boq]_aug[lightaugment]_quant_schedule[sigmoid]_res[224x224]
wandb: ‚≠êÔ∏è View project at https://wandb.ai/vpr_minds/tetra
wandb: üöÄ View run at https://wandb.ai/vpr_minds/tetra/runs/frvimlfo
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Loading `train_dataloader` to estimate number of stepping batches.

  | Name       | Type                 | Params | Mode 
------------------------------------------------------------
0 | fp_loss_fn | MultiSimilarityLoss  | 0      | train
1 | fp_miner   | MultiSimilarityMiner | 0      | train
2 | q_loss_fn  | MultiSimilarityLoss  | 0      | train
3 | q_miner    | MultiSimilarityMiner | 0      | train
4 | model      | VPRModel             | 99.9 M | train
------------------------------------------------------------
14.1 M    Trainable params
85.7 M    Non-trainable params
99.9 M    Total params
399.466   Total estimated model params size (MB)
312       Modules in train mode
0         Modules in eval mode
SLURM auto-requeueing enabled. Setting signal handlers.
`Trainer.fit` stopped: `max_epochs=8` reached.
/iridisfs/home/oeg1n18/QuantPlaceFinder/finetune.py:26: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  sd = torch.load(args.weights_path)["state_dict"]
Using bfloat16 Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: oliver1998 (vpr_minds). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.18.7
wandb: Run data is saved locally in ./wandb/run-20241218_022648-6by0aw23
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run backbone[vit_small_plrbitlinear]_agg[boq]_aug[lightaugment]_quant_schedule[sigmoid]_res[322x322]
wandb: ‚≠êÔ∏è View project at https://wandb.ai/vpr_minds/tetra
wandb: üöÄ View run at https://wandb.ai/vpr_minds/tetra/runs/6by0aw23
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Loading `train_dataloader` to estimate number of stepping batches.

  | Name       | Type                 | Params | Mode 
------------------------------------------------------------
0 | fp_loss_fn | MultiSimilarityLoss  | 0      | train
1 | fp_miner   | MultiSimilarityMiner | 0      | train
2 | q_loss_fn  | MultiSimilarityLoss  | 0      | train
3 | q_miner    | MultiSimilarityMiner | 0      | train
4 | model      | VPRModel             | 37.6 M | train
------------------------------------------------------------
12.4 M    Trainable params
25.3 M    Non-trainable params
37.6 M    Total params
150.548   Total estimated model params size (MB)
312       Modules in train mode
0         Modules in eval mode
SLURM auto-requeueing enabled. Setting signal handlers.
`Trainer.fit` stopped: `max_epochs=8` reached.
/iridisfs/home/oeg1n18/QuantPlaceFinder/finetune.py:26: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  sd = torch.load(args.weights_path)["state_dict"]
Using bfloat16 Automatic Mixed Precision (AMP)
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
HPU available: False, using: 0 HPUs
wandb: Using wandb-core as the SDK backend.  Please refer to https://wandb.me/wandb-core for more information.
wandb: Currently logged in as: oliver1998 (vpr_minds). Use `wandb login --relogin` to force relogin
wandb: Tracking run with wandb version 0.18.7
wandb: Run data is saved locally in ./wandb/run-20241218_031324-0838c3ad
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run backbone[vit_small_plrbitlinear]_agg[boq]_aug[lightaugment]_quant_schedule[sigmoid]_res[224x224]
wandb: ‚≠êÔ∏è View project at https://wandb.ai/vpr_minds/tetra
wandb: üöÄ View run at https://wandb.ai/vpr_minds/tetra/runs/0838c3ad
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
Loading `train_dataloader` to estimate number of stepping batches.

  | Name       | Type                 | Params | Mode 
------------------------------------------------------------
0 | fp_loss_fn | MultiSimilarityLoss  | 0      | train
1 | fp_miner   | MultiSimilarityMiner | 0      | train
2 | q_loss_fn  | MultiSimilarityLoss  | 0      | train
3 | q_miner    | MultiSimilarityMiner | 0      | train
4 | model      | VPRModel             | 37.5 M | train
------------------------------------------------------------
12.4 M    Trainable params
25.2 M    Non-trainable params
37.5 M    Total params
150.129   Total estimated model params size (MB)
312       Modules in train mode
0         Modules in eval mode
SLURM auto-requeueing enabled. Setting signal handlers.
`Trainer.fit` stopped: `max_epochs=8` reached.
